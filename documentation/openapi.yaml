openapi: 3.1.0

info:
  title: Indie-Films
  version: 1.0.0

servers:
  - url: http://localhost:9000/api/v1/indie-films
    description: Development server
  - url: https://indie-films.onrender.com/api/v1/indie-films
    description: Production server

tags:
  - name: Languages
  - name: Films
  - name: Classifications
  - name: Genres
  
paths:
  /films:
    post:
      tags:
        - Films
      summary: Create a new film
      requestBody:
        description: Add new film.
        content:
          multipart/form-data:
            schema: 
              $ref: '#/components/schemas/Film'
        required: true
      responses:
        '201':
          description: Succesful process.
        '400':
          description: Validation error. / Invalid data.
    get:
      tags:
        - Films
      summary: Obtain a array of films.
      responses:
        '200':
          description: OK
        '400':
          description: Validation error.
  /films/{filmId}:
    parameters:
      - in: path
        name: filmId
        schema: 
          type: string
        required: true
    put:
      tags:
        - Films
      summary: Edit the data of film.
      operationId: putFilmById
      requestBody:
        description: Update the data of film.
        content:
          aplication/json:
            schema: 
              $ref: '#/components/schemas/FilmPut'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Validation error. / Image can not be edited.
        '404':
          description: Film with id was not found. / Invalid data.
    patch:
      tags:
        - Films
      summary: Edit partial data of films.
      operationId: patchFilmById
      requestBody:
        description: Update the data of film.
        content:
          aplication/json: 
            schema: 
              $ref: '#/components/schemas/FilmPatch'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Validation error. / Image can not be edited.
        '404':
          description: Film with id was not found.
    get: 
      tags:
        - Films
      summary: Obtain a film by Id.
      operationId: getFilmById
      responses:
        '200':
          description: OK
        '400':
          description: Validation error.
        '404':
          description: Film with id was not found.
    delete:
      tags:
        - Films
      summary: Delete a film by Id.
      operationId: deleteFilmById
      responses:
        '204':
          description: The resource was deleted successfully.
        '400':
          description: Validation error.
        '404':
          description: Invalid Id.
  /films/image/{filmId}:
    parameters:
      - in: path
        name: filmId
        schema: 
          type: string
        required: true
    put: 
      tags:
        - Films
      summary: Edit the image of a film by Id.
      operationId: putImageFilmById
      requestBody: 
        description: Update the image film.
        content:
          multipart/form-data:
            schema: 
              $ref: '#/components/schemas/FilmImage'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Validation error. / File was not provided.
        '404':
          description: Film with id was not found.
  /languages:
    post:
      tags:
        - Languages
      summary: Create a new language.
      requestBody:
        description: Add new language.
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/Language'
        required: true
      responses:
        '201':
          description: Succesful process.
        '400':
          description: Validation error. / Invalid data.
    get:
      tags:
        - Languages
      summary: Obtain a array of languages.
      responses:
        '200':
          description: OK
        '400':
          description: Validation error.
  /languages/{languageId}:
    parameters:
      - in: path
        name: languageId
        schema: 
          type: string
        required: true
    put: 
      tags:
        - Languages 
      summary: Edit the name of language.
      operationId: updateLanguageById
      requestBody:
        description: Update the name of language.
        content:
          aplication/json:
            schema: 
              $ref: '#/components/schemas/Language'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Validation error.
        '404':
          description: Language with id was not found. / Invalid data.
    get: 
      tags:
        - Languages
      summary: Obtain a language of film by Id.
      operationId: getLanguageById
      responses:
        '200': 
          description: OK
        '400':
          description: Validation error.
        '404':
          description: Language with id was not found.
    delete:
      tags:
        - Languages
      summary: Delete a language of film by Id.
      operationId: deleteLanguageById
      responses:
        '204':
          description: The resource was deleted successfully.
        '400':
          description: Validation error.
        '404':
          description: Invalid Id.
  /classifications:
    post:
      tags:
        - Classifications
      summary: Create a new classification of film.
      requestBody:
        description: Add new classification.
        content:
          aplication/json:
            schema:
              $ref: '#/components/schemas/Classification'
        required: true
      responses:
        '201':
          description: Succesful process.
        '400':
          description: Validation error.
        '404': 
          description: Invalid data.
    get:
      tags:
        - Classifications
      summary: Obtain a array of classifications of films.
      responses:
        '200':
          description: OK
        '400':
          description: Validation error.
  /classifications/{classificationId}:
    parameters:
      - in: path
        name: classificationId 
        schema: 
          type: string
        required: true
    put:
      tags:
        - Classifications
      summary: Edit the name of classification.
      operationId: updateClassificationById
      requestBody: 
        description: Update the name of classification.
        content:
          aplication/json:
            schema: 
              $ref: '#/components/schemas/Classification'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Validation error.
        '404':
          description: Classification with id was not found. / Invalid data.
    get:
      tags:
        - Classifications
      summary: Obtain a classification of film by Id.
      operationId: getClassificationById
      responses:
        '200':
          description: OK
        '400':
          description: Validation error.
        '404':
          description: Classification with id was not found.
    delete:
      tags:
        - Classifications
      summary: Delete a classification of film by Id.
      operationId: deleteClassificationById
      responses:
        '204':
          description: The resource was deleted successfully.
        '400':
          description: Validation error.
        '404':
          description: Invalid Id.
  /genres:
    post:
      tags:
        - Genres
      summary: Create a new genre of film.
      requestBody:
        description: Add new genre.
        content:
          aplication/json:
            schema: 
              $ref: '#/components/schemas/Genre'
        required: true
      responses:
        '201':
          description: Succesful process.
        '400':
          description: Validation error.
        '404':
          description: Invalid data.
    get:
      tags:
        - Genres
      summary: Obtain a array of genres of films.
      responses:
        '200':
          description: OK
        '400':
          description: Validation error.
  /genres/{genreId}:
    parameters:
      - in: path
        name: genreId
        schema: 
          type: string
        required: true
    put:
      tags:
        - Genres
      summary: Edit the name of genre.
      operationId: updateGenreById
      requestBody:
        description: Update the name of genre.
        content:
          aplication/json:
            schema: 
              $ref: '#/components/schemas/Genre'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Validation error.
        '404':
          description: Genre with id was not found. / Invalid data.
    get:
      tags:
        - Genres
      summary: Obtain a genre of film by Id.
      operationId: getGenreById
      responses:
        '200':
          description: OK
        '400':
          description: Validation error.
        '404':
          description: Genre with id was not found.
    delete:
      tags:
        - Genres
      summary: Delete a genre of film by Id.
      operationId: deleteGenreById
      responses:
        '204':
          description: The source was deleted successfully.
        '400': 
          description: Validation error.
        '404':
          description: Invalid Id.
    
# TODO: comentar las respuestas porque aparece example: string
# TODO: de los que tienen params buscar el operationId: esta en el get de genresID 
# TODO: trabajar el example de FilmImage, no se ven los ejemplos

components:
  schemas:
    Film: 
      required:
        - originalTitle
        - englishTitle
        - director
        - country
        - year
        - classification
        - genre 
        - duration
        - originalLanguage
        - subtituleLanguages
      type: object
      properties:
        originalTitle:
          type: string
          example: reprise
        englishTitle:
          type: string
          example: reprise
        image:
          type: string
          format: binary
          contentMediaType: image/jpeg - image/jpg - image/png
          example: |
            Content-Type: image/jpg - image/jpeg - image/png
            Content-Disposition: form-data; name='image'; filename='example.jpg'
            (Binary file content)
        director:
          type: string
          format: array
          example: joachim trier
        country:
          type: countryObjectId
          format: array
          example: 64e833db84e13610c042a94b
        year:
          type: number
          example: 2021
        synopsis:
          type: string
          example: this is a norwegian film
        classification: 
          type: classificationObjectId
          example: 64bb4c0227da3b0b44723b80
        genre: 
          type: genreObjectId
          format: array
          example: 64bb4bdc27da3b0b44723b7d
        duration:
          type: number
          example: 120
        festivals:
          type: string
          format: array
          example: toronto
        awards:
          type: string
          format: array
          example: sundance film festival
        originalLanguage:
          type: languageObjectId
          format: array
          example: 645dbd910c3480cce0ac3246
        translationAudio:
          type: languageObjectId
          format: array
          example: 645dbd910c3480cce0ac3246
        subtituleLanguages:
          type: languageObjectId
          format: array
          example: 645dbd910c3480cce0ac3246
    FilmPut:
      required:
        - originalTitle
        - englishTitle
        - director
        - country
        - year
        - synopsis
        - classification
        - genre 
        - duration
        - festivals
        - awards
        - originalLanguage
        - translationAudio
        - subtituleLanguages
      type: object
      properties:
        originalTitle:
          type: string
          example: reprise
        englishTitle:
          type: string
          example: reprise
        director:
          type: string
          format: array
          example: joachim trier
        country:
          type: countryObjectId
          format: array
          example: 64e833db84e13610c042a94b
        year:
          type: number
          example: 2021
        synopsis:
          type: string
          example: this is a norwegian film
        classification: 
          type: classificationObjectId
          example: 64bb4c0227da3b0b44723b80
        genre: 
          type: genreObjectId
          format: array
          example: 64bb4bdc27da3b0b44723b7d
        duration:
          type: number
          example: 120
        festivals:
          type: string
          format: array
          example: toronto
        awards:
          type: string
          format: array
          example: sundance film festival
        originalLanguage:
          type: languageObjectId
          format: array
          example: 645dbd910c3480cce0ac3246
        translationAudio:
          type: languageObjectId
          format: array
          example: 645dbd910c3480cce0ac3246
        subtituleLanguages:
          type: languageObjectId
          format: array
          example: 645dbd910c3480cce0ac3246
    FilmPatch:
      type: object
      properties:
        originalTitle:
          type: string
          example: reprise
        englishTitle:
          type: string
          example: reprise
        director:
          type: string
          format: array
          example: joachim trier
        country:
          type: countryObjectId
          format: array
          example: 64e833db84e13610c042a94b
        year:
          type: number
          example: 2021
        synopsis:
          type: string
          example: this is a norwegian film
        classification: 
          type: classificationObjectId
          example: 64bb4c0227da3b0b44723b80
        genre: 
          type: genreObjectId
          format: array
          example: 64bb4bdc27da3b0b44723b7d
        duration:
          type: number
          example: 120
        festivals:
          type: string
          format: array
          example: toronto
        awards:
          type: string
          format: array
          example: sundance film festival
        originalLanguage:
          type: languageObjectId
          format: array
          example: 645dbd910c3480cce0ac3246
        translationAudio:
          type: languageObjectId
          format: array
          example: 645dbd910c3480cce0ac3246
        subtituleLanguages:
          type: languageObjectId
          format: array
          example: 645dbd910c3480cce0ac3246
    FilmImage:
      required:
        - image
      type: object
      properties:
        image:
          type: string
          format: binary
          contentMediaType: image/jpeg - image/jpg - image/png
          example: |
            Content-Type: image/jpg - image/jpeg - image/png
            Content-Disposition: form-data; name='image'; filename='example.jpg'
            (Binary file content)
    Language: 
      required: 
        - name
      type: object 
      properties:
        name:
          type: string
          example: spanish
    Classification:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: adult
    Genre: 
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: drama
  parameters:
    genreParam:
      name: genreId
      in: path
      required: true
      schema:
        type: string